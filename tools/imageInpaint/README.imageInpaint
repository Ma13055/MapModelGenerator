======================================================================
  RTComponent: imageInpaint specificatioin

  OpenRTM-aist-1.0.0
  Date: $Date$

  @author 立川将(Tatekawa Masaru)
   Email:y09148@shibaura-it.ac.jp

  This file is generated by rtc-template with the following argments.

#   rtc-template -bcxx --module-name=imageInpaint 
#   --module-desc='輪郭情報を用いた画像修復を行う' --module-version=1.2.0 --module-vendor=Masaru Tatekawa(SIT) 
#   --module-category=UI --module-comp-type=UNIQUE 
#   --module-act-type=PERIODIC --module-max-inst=1 
#   --config=01_contoursType:string:Convex --config=02_MaskDataSelect:string:Image --config=03_MaskTypeSelect:string:All 
#   --inport=tempFolderPath:RTC::TimedString --inport=srcImage:RTC::CameraImage --inport=contoursRectangles:RTC::TimedShortSeq --inport=contoursConvex:RTC::TimedShortSeq --inport=clickPoint:RTC::TimedPoint3D --inport=draggedRect:RTC::TimedShortSeq --inport=inpaintImage:RTC::CameraImage --outport=modifyImage:RTC::CameraImage --outport=modifyImagePath:RTC::TimedString --outport=inpaintSrcImage:RTC::CameraImage --outport=inpaintMaskImage:RTC::CameraImage --outport=inpaintMaskArea:RTC::TimedShortSeq --outport=processedImage:RTC::CameraImage 


======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: imageInpaint
Description: 輪郭情報を用いた画像修復を行う
Version:     1.2.0
Vendor:      Masaru Tatekawa(SIT)
Category:    UI
Kind:        DataFlowComponent
Comp. Type:  UNIQUE
Act. Type:   PERIODIC
MAX Inst.:   1
Lang:        C++
Lang Type:   

Overview:    入力ポートから受け取った輪郭点データ群の情報を用いて画
             像修復を行うコンポーネント
             受け取った輪郭点データ群に対し、UIコンポーネントを用い
             て削除等の操作を行うことができる
             また、修復に対しても、UIコンポーネントでのドラッグ入力
             をマスクイメージとして修復処理コンポーネント(CVInpain
             t)に送ることで、容易に指定領域の画像修復を行うことがで
             きます。
In/Out:      入力
             tempFolderPath[TimedString] -
             画像情報送信に用いる一時保存領域のパス
             srcImage[CameraImage] - 修復処理を行いたい画像データ
             contoursRectangles[TimedShortSeq] -
             輪郭点群がベースとなっている輪郭長方形データ群
             contoursConvex[TimedShortSeq] -
             輪郭点群がベースとなっている輪郭凸図形データ群
             clickPoint[TimedPoint3D] -
             UIコンポーネントとクリック情報
             draggedRect[TimedShortSeq] -
             ドラッグされて生成された長方形情報
             inpaintImage[CameraImage] -
             修復処理の実行結果となる画像
             出力
             modifyImage[CameraImage] -
             UIコンポーネントへ表示する画像
             modifyImagePath[TimedString] -
             及び画像の保存アドレスのパス
             inpaintSrcImage[CameraImage] - 修復処理のベース画像
             inpaintMaskImage[CameraImage] -
             修復に用いるマスク画像
             inpaintMaskArea[TimedShortSeq] -
             マスク画像作成に用いる長方形データ
             processedImage[CameraImage] -
             全ての処理が終わった結果の画像
Algorithm:   入力画像と入力輪郭データを用いて修復処理を行い、結果を
             出力する
             輪郭データに対するUIを用いての修正処理、輪郭データを用
             いての自動修復処理、UIを用いての手動による修復処理の順
             で進む
# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]    implemented

[on_finalize]

[on_startup]

[on_shutdown]

[on_activated]     implemented
	Description:   初期化を行う

[on_deactivated]   implemented
	Description:   表示ウィンドウを閉じる

[on_execute]       implemented
	Description:   画像の輪郭情報を用いての画像修復を行う

[on_aborting]

[on_error]

[on_reset]         implemented
	Description:   表示ウィンドウを閉じる

[on_state_update]

[on_rate_changed]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">

	Name:        tempFolderPath
	PortNumber:  0
	Description: 一時作業領域のパスを受け取るためのポート
	PortType: 
	DataType:    RTC::TimedString
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedString
		Number:          1
		Semantics:       大きい画像データの受け渡しや、ファイルの保存な
		                 どに用いる作業領域を指定するアドレスとして用い
		                 る
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        srcImage
	PortNumber:  1
	Description: 修復処理を行う画像データを受け取るポート
	PortType: 
	DataType:    RTC::CameraImage
	MaxOut: 
	[Data Elements]
		Name:
		Type:            CameraImage
		Number:          1
		Semantics:       この画像に対し修復処理が行われる
		                 また、UI上に表示される画像もこの画像データを用
		                 いる
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        contoursRectangles
	PortNumber:  2
	Description: 輪郭検出によって得た輪郭点群からなる長方形のデータを
	             受け取るためのポート
	PortType: 
	DataType:    RTC::TimedShortSeq
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShortSeq
		Number:          長方形数*4
		Semantics:       配列化されたRectangleの要素を受け取る
		                 Rectangle
		                 r1の左上の点p1.x,p1.yとwidth,heightが
		                 - r1.p1.x [0]
		                 - r1.p1.y [1]
		                 - r1.width [2]
		                 - r1.height [3]
		                 これら4つの要素が配列に格納されている
		                 すなわち[0]~[3]で一つの長方形となる
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        contoursConvex
	PortNumber:  3
	Description: 配列化されたconvexとして用いるvector<Point>のデータ
	             を受信するためのポート
	PortType: 
	DataType:    RTC::TimedShortSeq
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShortSeq
		Number:          全図形数*(1+図形の持つ凸数*2)
		Semantics:       Point p1,p2,p3,p4からなるVector<Point>
		                 convex1に対し
		                 - convex1.size() [0]
		                 - convex1.p1.x [1]
		                 - convex1.p1.y [2]
		                 - convex1.p2.x [3]
		                 - convex1.p2.y [4]
		                 - convex1.p3.x [5]
		                 - convex1.p3.y [6]
		                 - convex1.p4.x [7]
		                 - convex1.p4.y [8]
		                 これら9つの要素が配列に格納されている
		                 すなわち[0]~[8]で一つの図形となる
		                 受け取り側は、[0]にあたるデータ数分のPointが来
		                 ると認識しそのPoint数分格納したら次のvector処
		                 理へ進む
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        clickPoint
	PortNumber:  4
	Description: UIでクリックされた座標を受け取るポート
	PortType: 
	DataType:    RTC::TimedPoint3D
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedPoint3D
		Number:          1
		Semantics:       Point3Dには
		                 point.x - UI上のx座標
		                 point.y - UI上のy座標
		                 point.z - 操作に対するフラグ情報
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        draggedRect
	PortNumber:  5
	Description: UIでドラッグされた長方形を受け取るポート
	PortType: 
	DataType:    RTC::TimedShortSeq
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShortSeq
		Number:          4
		Semantics:       長方形の左上のx座標, 左上のy座標,
		                 横幅,縦幅を持つshortの配列
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        inpaintImage
	PortNumber:  6
	Description: 修復処理が行われた画像を受け取るポート
	PortType: 
	DataType:    RTC::CameraImage
	MaxOut: 
	[Data Elements]
		Name:
		Type:            CameraImage
		Number:          1
		Semantics:       修復処理後の画像データ
		                 CVInpaintから受け取ることを前提としている
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">

	Name:        modifyImage
	PortNumber:  0
	Description: ユーザの修正処理のためにUI上で表示する画像を送るポー
	             ト
	PortType: 
	DataType:    RTC::CameraImage
	MaxOut: 
	[Data Elements]
		Name:
		Type:            CameraImage
		Number:          1
		Semantics:       抽出領域を書き込んだ画像や修復処理後の画像
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        modifyImagePath
	PortNumber:  1
	Description: ユーザの修正処理のためにUI上で表示する画像のパスを送
	             るポート
	PortType: 
	DataType:    RTC::TimedString
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedString
		Number:          1
		Semantics:       抽出領域が書き込まれた画像や修復処理後の画像の
		                 パス
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        inpaintSrcImage
	PortNumber:  2
	Description: 修復処理に用いる画像を送るポート
	PortType: 
	DataType:    RTC::CameraImage
	MaxOut: 
	[Data Elements]
		Name:
		Type:            CameraImage
		Number:          1
		Semantics:       この画像に対し送り先で修復処理が行われる
		                 CVInpaintに繋がることを前提としている
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        inpaintMaskImage
	PortNumber:  3
	Description: 修復処理に用いるマスク画像を送るポート
	PortType: 
	DataType:    RTC::CameraImage
	MaxOut: 
	[Data Elements]
		Name:
		Type:            CameraImage
		Number:          1
		Semantics:       このマスク画像を用いて修復処理が行われる
		                 CVInpaintに繋がることを前提としている
		                 (同タイミングで長方形座標データを送った場合こ
		                 ちらからの情報が優先して処理される)
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        inpaintMaskArea
	PortNumber:  4
	Description: マスク画像作成に用いる座標群を送るポート
	PortType: 
	DataType:    RTC::TimedShortSeq
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShortSeq
		Number:          4
		Semantics:       この座標群情報を用いてマスク画像が作成されて修
		                 復処理が行われる
		                 CVInpaintと繋がることを前提としている
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        processedImage
	PortNumber:  5
	Description: すべての処理が終わった画像を送るポート
	PortType: 
	DataType:    RTC::CameraImage
	MaxOut: 
	[Data Elements]
		Name:
		Type:            CameraImage
		Number:          1
		Semantics:       輪郭情報を用いて修復処理が完了した画像
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
	Configuration:
		Name:            string 01_contoursType
		Description:     処理に用いる輪郭データタイプを選ぶ
		                 両方の形式のデータをポートから受け取っている場
		                 合に用いる
		Type:            string
		DefaultValue:    Convex Convex
		Unit:            
		Range:           
		Constraint:      Rectangle -
		                 輪郭点データを長方形データに変換したデータ群を
		                 用いて処理を進める
		                 Convex -
		                 輪郭点データを凸図形データに変換したデータ群を
		                 用いて処理を進める

		Name:            string 02_MaskDataSelect
		Description:     CVInpaintへ送るマスクの情報を選択する
		Type:            string
		DefaultValue:    Image Image
		Unit:            
		Range:           
		Constraint:      Image -
		                 マスク画像を作成して出力ポートinpaintMaskImag
		                 eからCVInpaintへ送る
		                 Rectangle -
		                 マスク領域を作成して出力ポートinpaintMaskArea
		                 からCVInpaintへ送る

		Name:            string 03_MaskTypeSelect
		Description:     maskImageを送る場合、全輪郭データを一度に処理
		                 するかどうかを選択する
		Type:            string
		DefaultValue:    All All
		Unit:            
		Range:           
		Constraint:      All - すべてのマスク関係データを送る
		                 Single - 単体のマスク関係データを送る

# </rtc-template> 

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

This area is reserved for future OpenRTM.

