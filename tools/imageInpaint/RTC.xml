<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<rtc:RtcProfile rtc:version="0.2" rtc:id="RTC:Masaru Tatekawa(SIT):UI:imageInpaint:1.2.0" xmlns:rtcExt="http://www.openrtp.org/namespaces/rtc_ext" xmlns:rtcDoc="http://www.openrtp.org/namespaces/rtc_doc" xmlns:rtc="http://www.openrtp.org/namespaces/rtc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <rtc:BasicInfo xsi:type="rtcExt:basic_info_ext" rtcExt:saveProject="imageInpaint" rtc:updateDate="2014-11-28T11:06:08.474+09:00" rtc:creationDate="2014-10-30T17:22:25+09:00" rtc:version="1.2.0" rtc:vendor="Masaru Tatekawa(SIT)" rtc:maxInstances="1" rtc:executionType="PeriodicExecutionContext" rtc:executionRate="1000.0" rtc:description="輪郭情報を用いた画像修復を行う" rtc:category="UI" rtc:componentKind="DataFlowComponent" rtc:activityType="PERIODIC" rtc:componentType="UNIQUE" rtc:name="imageInpaint">
        <rtcDoc:Doc rtcDoc:reference="" rtcDoc:license="" rtcDoc:creator="立川将(Tatekawa Masaru)&lt;br/&gt;Email:y09148@shibaura-it.ac.jp" rtcDoc:algorithm="入力画像と入力輪郭データを用いて修復処理を行い、結果を出力する&lt;br/&gt;輪郭データに対するUIを用いての修正処理、輪郭データを用いての自動修復処理、UIを用いての手動による修復処理の順で進む" rtcDoc:inout="入力&lt;br/&gt;tempFolderPath[TimedString] - 画像情報送信に用いる一時保存領域のパス&lt;br/&gt;srcImage[CameraImage] - 修復処理を行いたい画像データ&lt;br/&gt;contoursRectangles[TimedShortSeq] - 輪郭点群がベースとなっている輪郭長方形データ群&lt;br/&gt;contoursConvex[TimedShortSeq] - 輪郭点群がベースとなっている輪郭凸図形データ群&lt;br/&gt;clickPoint[TimedPoint3D] - UIコンポーネントとクリック情報&lt;br/&gt;draggedRect[TimedShortSeq] - ドラッグされて生成された長方形情報&lt;br/&gt;inpaintImage[CameraImage] - 修復処理の実行結果となる画像&lt;br/&gt;&lt;br/&gt;出力&lt;br/&gt;modifyImage[CameraImage] - UIコンポーネントへ表示する画像&lt;br/&gt;modifyImagePath[TimedString] - 及び画像の保存アドレスのパス&lt;br/&gt;inpaintSrcImage[CameraImage] - 修復処理のベース画像&lt;br/&gt;inpaintMaskImage[CameraImage] - 修復に用いるマスク画像&lt;br/&gt;inpaintMaskArea[TimedShortSeq] - マスク画像作成に用いる長方形データ&lt;br/&gt;processedImage[CameraImage] - 全ての処理が終わった結果の画像" rtcDoc:description="入力ポートから受け取った輪郭点データ群の情報を用いて画像修復を行うコンポーネント&lt;br/&gt;受け取った輪郭点データ群に対し、UIコンポーネントを用いて削除等の操作を行うことができる&lt;br/&gt;また、修復に対しても、UIコンポーネントでのドラッグ入力をマスクイメージとして修復処理コンポーネント(CVInpaint)に送ることで、容易に指定領域の画像修復を行うことができます。"/>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
    </rtc:BasicInfo>
    <rtc:Actions>
        <rtc:OnInitialize xsi:type="rtcDoc:action_status_doc" rtc:implemented="true"/>
        <rtc:OnFinalize xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnStartup xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnShutdown xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnActivated xsi:type="rtcDoc:action_status_doc" rtc:implemented="true">
            <rtcDoc:Doc rtcDoc:postCondition="" rtcDoc:preCondition="" rtcDoc:description="初期化を行う"/>
        </rtc:OnActivated>
        <rtc:OnDeactivated xsi:type="rtcDoc:action_status_doc" rtc:implemented="true">
            <rtcDoc:Doc rtcDoc:postCondition="" rtcDoc:preCondition="" rtcDoc:description="表示ウィンドウを閉じる"/>
        </rtc:OnDeactivated>
        <rtc:OnAborting xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnError xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnReset xsi:type="rtcDoc:action_status_doc" rtc:implemented="true">
            <rtcDoc:Doc rtcDoc:postCondition="" rtcDoc:preCondition="" rtcDoc:description="表示ウィンドウを閉じる"/>
        </rtc:OnReset>
        <rtc:OnExecute xsi:type="rtcDoc:action_status_doc" rtc:implemented="true">
            <rtcDoc:Doc rtcDoc:postCondition="" rtcDoc:preCondition="" rtcDoc:description="画像の輪郭情報を用いての画像修復を行う"/>
        </rtc:OnExecute>
        <rtc:OnStateUpdate xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnRateChanged xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnAction xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnModeChanged xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
    </rtc:Actions>
    <rtc:ConfigurationSet>
        <rtc:Configuration xsi:type="rtcExt:configuration_ext" rtcExt:variableName="cont_type" rtc:unit="" rtc:defaultValue="Convex" rtc:type="string" rtc:name="01_contoursType">
            <rtc:Constraint>
                <rtc:ConstraintUnitType>
                    <rtc:Or>
                        <rtc:Constraint>
                            <rtc:ConstraintUnitType>
                                <rtc:propertyIsEqualTo rtc:matchCase="false">
                                    <rtc:Literal>Rectangle</rtc:Literal>
                                </rtc:propertyIsEqualTo>
                            </rtc:ConstraintUnitType>
                        </rtc:Constraint>
                        <rtc:Constraint>
                            <rtc:ConstraintUnitType>
                                <rtc:propertyIsEqualTo rtc:matchCase="false">
                                    <rtc:Literal>Convex</rtc:Literal>
                                </rtc:propertyIsEqualTo>
                            </rtc:ConstraintUnitType>
                        </rtc:Constraint>
                    </rtc:Or>
                </rtc:ConstraintUnitType>
            </rtc:Constraint>
            <rtcDoc:Doc rtcDoc:constraint="Rectangle - 輪郭点データを長方形データに変換したデータ群を用いて処理を進める&lt;br/&gt;Convex - 輪郭点データを凸図形データに変換したデータ群を用いて処理を進める" rtcDoc:range="" rtcDoc:unit="" rtcDoc:description="処理に用いる輪郭データタイプを選ぶ&lt;br/&gt;両方の形式のデータをポートから受け取っている場合に用いる" rtcDoc:defaultValue="Convex" rtcDoc:dataname="string"/>
            <rtcExt:Properties rtcExt:value="radio" rtcExt:name="__widget__"/>
        </rtc:Configuration>
        <rtc:Configuration xsi:type="rtcExt:configuration_ext" rtcExt:variableName="mask_select" rtc:unit="" rtc:defaultValue="Image" rtc:type="string" rtc:name="02_MaskDataSelect">
            <rtc:Constraint>
                <rtc:ConstraintUnitType>
                    <rtc:Or>
                        <rtc:Constraint>
                            <rtc:ConstraintUnitType>
                                <rtc:propertyIsEqualTo rtc:matchCase="false">
                                    <rtc:Literal>Image</rtc:Literal>
                                </rtc:propertyIsEqualTo>
                            </rtc:ConstraintUnitType>
                        </rtc:Constraint>
                        <rtc:Constraint>
                            <rtc:ConstraintUnitType>
                                <rtc:propertyIsEqualTo rtc:matchCase="false">
                                    <rtc:Literal>Rectangle</rtc:Literal>
                                </rtc:propertyIsEqualTo>
                            </rtc:ConstraintUnitType>
                        </rtc:Constraint>
                    </rtc:Or>
                </rtc:ConstraintUnitType>
            </rtc:Constraint>
            <rtcDoc:Doc rtcDoc:constraint="Image - マスク画像を作成して出力ポートinpaintMaskImageからCVInpaintへ送る&lt;br/&gt;Rectangle - マスク領域を作成して出力ポートinpaintMaskAreaからCVInpaintへ送る" rtcDoc:range="" rtcDoc:unit="" rtcDoc:description="CVInpaintへ送るマスクの情報を選択する" rtcDoc:defaultValue="Image" rtcDoc:dataname="string"/>
            <rtcExt:Properties rtcExt:value="radio" rtcExt:name="__widget__"/>
        </rtc:Configuration>
        <rtc:Configuration xsi:type="rtcExt:configuration_ext" rtcExt:variableName="mask_type" rtc:unit="" rtc:defaultValue="All" rtc:type="string" rtc:name="03_MaskTypeSelect">
            <rtc:Constraint>
                <rtc:ConstraintUnitType>
                    <rtc:Or>
                        <rtc:Constraint>
                            <rtc:ConstraintUnitType>
                                <rtc:propertyIsEqualTo rtc:matchCase="false">
                                    <rtc:Literal>All</rtc:Literal>
                                </rtc:propertyIsEqualTo>
                            </rtc:ConstraintUnitType>
                        </rtc:Constraint>
                        <rtc:Constraint>
                            <rtc:ConstraintUnitType>
                                <rtc:propertyIsEqualTo rtc:matchCase="false">
                                    <rtc:Literal>Single</rtc:Literal>
                                </rtc:propertyIsEqualTo>
                            </rtc:ConstraintUnitType>
                        </rtc:Constraint>
                    </rtc:Or>
                </rtc:ConstraintUnitType>
            </rtc:Constraint>
            <rtcDoc:Doc rtcDoc:constraint="All - すべてのマスク関係データを送る&lt;br/&gt;Single - 単体のマスク関係データを送る" rtcDoc:range="" rtcDoc:unit="" rtcDoc:description="maskImageを送る場合、全輪郭データを一度に処理するかどうかを選択する" rtcDoc:defaultValue="All" rtcDoc:dataname="string"/>
            <rtcExt:Properties rtcExt:value="radio" rtcExt:name="__widget__"/>
        </rtc:Configuration>
    </rtc:ConfigurationSet>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="temp_path" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedString" rtc:name="tempFolderPath" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="大きい画像データの受け渡しや、ファイルの保存などに用いる作業領域を指定するアドレスとして用いる" rtcDoc:number="1" rtcDoc:type="TimedString" rtcDoc:description="一時作業領域のパスを受け取るためのポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="src_img" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::CameraImage" rtc:name="srcImage" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="この画像に対し修復処理が行われる&lt;br/&gt;また、UI上に表示される画像もこの画像データを用いる" rtcDoc:number="1" rtcDoc:type="CameraImage" rtcDoc:description="修復処理を行う画像データを受け取るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="cont_rect" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedShortSeq" rtc:name="contoursRectangles" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="配列化されたRectangleの要素を受け取る&lt;br/&gt;Rectangle r1の左上の点p1.x,p1.yとwidth,heightが&lt;br/&gt;- r1.p1.x [0]&lt;br/&gt;- r1.p1.y [1]&lt;br/&gt;- r1.width [2]&lt;br/&gt;- r1.height [3]&lt;br/&gt;これら4つの要素が配列に格納されている&lt;br/&gt;すなわち[0]~[3]で一つの長方形となる" rtcDoc:number="長方形数*4" rtcDoc:type="TimedShortSeq" rtcDoc:description="輪郭検出によって得た輪郭点群からなる長方形のデータを受け取るためのポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="cont_convex" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedShortSeq" rtc:name="contoursConvex" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="Point p1,p2,p3,p4からなるVector&lt;Point&gt; convex1に対し&lt;br/&gt;- convex1.size() [0]&lt;br/&gt;- convex1.p1.x [1]&lt;br/&gt;- convex1.p1.y [2]&lt;br/&gt;- convex1.p2.x [3]&lt;br/&gt;- convex1.p2.y [4]&lt;br/&gt;- convex1.p3.x [5]&lt;br/&gt;- convex1.p3.y [6]&lt;br/&gt;- convex1.p4.x [7]&lt;br/&gt;- convex1.p4.y [8]&lt;br/&gt;これら9つの要素が配列に格納されている&lt;br/&gt;すなわち[0]~[8]で一つの図形となる&lt;br/&gt;受け取り側は、[0]にあたるデータ数分のPointが来ると認識しそのPoint数分格納したら次のvector処理へ進む" rtcDoc:number="全図形数*(1+図形の持つ凸数*2)" rtcDoc:type="TimedShortSeq" rtcDoc:description="配列化されたconvexとして用いるvector&lt;Point&gt;のデータを受信するためのポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="click_point" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedPoint3D" rtc:name="clickPoint" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="Point3Dには&lt;br/&gt;point.x - UI上のx座標&lt;br/&gt;point.y - UI上のy座標&lt;br/&gt;point.z - 操作に対するフラグ情報" rtcDoc:number="1" rtcDoc:type="TimedPoint3D" rtcDoc:description="UIでクリックされた座標を受け取るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="drag_rect" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedShortSeq" rtc:name="draggedRect" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="長方形の左上のx座標, 左上のy座標, 横幅,縦幅を持つshortの配列" rtcDoc:number="4" rtcDoc:type="TimedShortSeq" rtcDoc:description="UIでドラッグされた長方形を受け取るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="inpt_img" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::CameraImage" rtc:name="inpaintImage" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="修復処理後の画像データ&lt;br/&gt;CVInpaintから受け取ることを前提としている" rtcDoc:number="1" rtcDoc:type="CameraImage" rtcDoc:description="修復処理が行われた画像を受け取るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="modi_img" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::CameraImage" rtc:name="modifyImage" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="抽出領域を書き込んだ画像や修復処理後の画像" rtcDoc:number="1" rtcDoc:type="CameraImage" rtcDoc:description="ユーザの修正処理のためにUI上で表示する画像を送るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="modi_img_path" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedString" rtc:name="modifyImagePath" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="抽出領域が書き込まれた画像や修復処理後の画像のパス" rtcDoc:number="1" rtcDoc:type="TimedString" rtcDoc:description="ユーザの修正処理のためにUI上で表示する画像のパスを送るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="inpt_src_img" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::CameraImage" rtc:name="inpaintSrcImage" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="この画像に対し送り先で修復処理が行われる&lt;br/&gt;CVInpaintに繋がることを前提としている" rtcDoc:number="1" rtcDoc:type="CameraImage" rtcDoc:description="修復処理に用いる画像を送るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="inpt_mask_img" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::CameraImage" rtc:name="inpaintMaskImage" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="このマスク画像を用いて修復処理が行われる&lt;br/&gt;CVInpaintに繋がることを前提としている&lt;br/&gt;(同タイミングで長方形座標データを送った場合こちらからの情報が優先して処理される)" rtcDoc:number="1" rtcDoc:type="CameraImage" rtcDoc:description="修復処理に用いるマスク画像を送るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="mask_area" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedShortSeq" rtc:name="inpaintMaskArea" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="この座標群情報を用いてマスク画像が作成されて修復処理が行われる&lt;br/&gt;CVInpaintと繋がることを前提としている" rtcDoc:number="4" rtcDoc:type="TimedShortSeq" rtcDoc:description="マスク画像作成に用いる座標群を送るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="proc_img" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::CameraImage" rtc:name="processedImage" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="輪郭情報を用いて修復処理が完了した画像" rtcDoc:number="1" rtcDoc:type="CameraImage" rtcDoc:description="すべての処理が終わった画像を送るポート"/>
    </rtc:DataPorts>
    <rtc:Language xsi:type="rtcExt:language_ext" rtc:kind="C++"/>
</rtc:RtcProfile>
