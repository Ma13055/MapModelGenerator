CVHoughThransform - 日本語
=======================


はじめに
========

クラスについては、 `APIドキュメンテーション`_ に参照してください。

.. _`APIドキュメンテーション`:
   doxygen/html/index.html

条件
====

CVHoughThransformはOpenRTM-aist 1.0.0以上のC++版が必要です。

CVHoughThransformは CMake_ を使います。CMake 2.8以上が必要です。

.. _CMAke:
   http://www.cmake.org

インストール
============

インストーラ
------------

Windowsのユーザはインストーラパッケージを使用してコンポーネントをインストール
することができます。これはコンポーネント及びそのすべての必要なライブラリを
インストールします。Windowsでインストールする場合、インストーラの使用を推奨してます。

- インストーラをダウンロードしてください。
- インストールを始めるためにインストーラをダブルクリックしてください。
- 指示にしたがってコンポーネントをインストールしてください。
- 環境変数の変更を適用するため、コンポーネントを使用する前にコンピューターを
  再起動する必要があるかもしれません。

CVHoughThransformは ``CVHoughThransformComp`` の実行をダブルクリックして実行することが
できます。あるいは、 ``CVHoughThransform`` を初期化関数の ``CVHoughThransformInit`` を利用して、
マネージャにロードすることができます。

ソースから
----------

ソースを使う場合は以下の手順でインストールしてください。

- ソースをダウンロードして解凍してください::

    tar -xvzf CVHoughThransform-1.0.0.tar.gz

- 解凍されたフォルダに入ってください::

    cd CVHoughThransform-1.0.0

- ``build`` フォルダを作ってください::

    mkdir build

- `` build`` フォルダに入ってください::

    cd build

- CMakeを実行してください::

    cmake ../

- エラーが出無い場合、makeを実行してください::

    make

- ``make install`` でコンポーネントをインストールしてください。選択された
  インストール場所に書き込み権限があるかを確認してください::

  ``make install``

- インストールする場所はccmakeを実行して ``CMAKE_INSTALL_PREFIX`` を
  設定することで変更が可能です。

    ccmake ../

ここまでで、コンポーネントが使えるようになりました。コンフィグレーションは次のセクションを
参照してください。

CVHoughThransformは ``CVHoughThransformComp`` を実行（ ``${prefix}/components/bin`` に
インストールされます）することでスタンドアローンモードで実行することができます。
あるいは、 ``libCVHoughThransform.so`` を初期化関数の ``CVHoughThransformInit`` を利用して、
マネージャにロードすることができます。このライブラリは ``${prefix}/components/lib`` 
または ``${prefix}/components/lib64`` にインストールされます。


コンフィグレーション
====================

使えるコンフィグレーションパラメータは以下のテーブルを参照
してください。

================ ================== ================ ====
パラメータ       データ型           デフォルト値     意味
================ ================== ================ ====
01_ImageView     string             OFF              画像表示の選択
02_HoughMethod   string             STANDARD         ハフ変換のmethodを選択するためのradioボタン
03_rho           double             1                ピクセル単位で表される投票空間の距離分解能
04_theta         double             0.0174533        ラジアン単位で表される投票空間の角度分解能
05_threshold     int                100              投票の閾値パラメータ<br/>十分な票( >threshold )を得た直線のみ出力されます
06_srn           double             0                マルチスケールハフ変換において、距離分解能rhoの除数となる値<br/>投票空間の粗い距離分解能はrhoとなり、細かい分解能はrho/srnとなります<br/>もしsrn = 0 かつ stn = 0の場合は、古典的ハフ変換が利用されます<br/>そうでない場合は、両方のパラメータが正値である必要があります
07_stn           double             0                マルチスケールハフ変換において、角度分解能thetaの除数となる値
08_minLineLength double             30               最小の線分長<br/>これより短い線分は破棄されます
09_maxLineGap    double             10               2点が同一線分上にあると見なす場合に許容される最大距離
================ ================== ================ ====

ポート
======

コンポーネントによって提供されるポートは以下のテーブルで述べられています。

=============== =========== ============================== ====
ポート名        ポート型    データ型                       意味
=============== =========== ============================== ====
srcImage        InPort      RTC::CameraImage               二値画像の元画像を受け取るポート
thresholdImage  InPort      RTC::CameraImage               ハフ変換を行う二値画像を受け取るポート
houghLines      OutPort     RTC::TimedShortSeq             ハフ変換によって得たlinesのデータを送るためのポート
=============== =========== ============================== ====

例
==

例のrtc.confファイルは ``${prefix}/components/share/CVHoughThransform/examples/conf/``
フォルダにインストールされています。

Changelog
=========


License
=======

このソフトウェアは産業技術総合研究所で開発されています。承認番号はH23PRO-????
です。このソフトウェアは Lesser General Public License (LGPL) ライセンスとして
公開されてます。COPYING.LESSER を参照してください。

