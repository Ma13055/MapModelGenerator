<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<rtc:RtcProfile rtc:version="0.2" rtc:id="RTC:Masaru Tatekawa(SIT):Conversion:convToLineMap:1.0.0" xmlns:rtcExt="http://www.openrtp.org/namespaces/rtc_ext" xmlns:rtcDoc="http://www.openrtp.org/namespaces/rtc_doc" xmlns:rtc="http://www.openrtp.org/namespaces/rtc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <rtc:BasicInfo xsi:type="rtcExt:basic_info_ext" rtcExt:saveProject="conversionToLineMap" rtc:updateDate="2014-10-31T00:20:03+09:00" rtc:creationDate="2014-10-30T23:22:08+09:00" rtc:version="1.0.0" rtc:vendor="Masaru Tatekawa(SIT)" rtc:maxInstances="1" rtc:executionType="PeriodicExecutionContext" rtc:executionRate="1000.0" rtc:description="輪郭情報と特徴点を基にラインマップへ変換する" rtc:category="Conversion" rtc:componentKind="DataFlowComponent" rtc:activityType="PERIODIC" rtc:componentType="UNIQUE" rtc:name="convToLineMap">
        <rtcDoc:Doc rtcDoc:reference="" rtcDoc:license="" rtcDoc:creator="立川将(Tatekawa Masaru)&lt;br/&gt;Email:y09148@shibaura-it.ac.jp" rtcDoc:algorithm="輪郭点データ群より得られる凸図形に対し、UI上で修正を行うことでラインマップに変換する。&lt;br/&gt;ここでのラインマップは「地図の頂点を示す座標群と、その座標同士の関係性」を持つ点と線の情報群を指す" rtcDoc:inout="入力&lt;br/&gt;tempFolderPath[TimedString] - 画像情報送信に用いる一時保存領域のパス&lt;br/&gt;srcImage[CameraImage] - 修復処理を行いたい画像データ&lt;br/&gt;contoursConvex[TimedShortSeq] - 輪郭点群がベースとなっている輪郭凸図形データ群&lt;br/&gt;clickPoint[TimedPoint3D] - UIコンポーネントとクリック情報&lt;br/&gt;draggedRect[TimedShortSeq] - ドラッグされて生成された長方形情報&lt;br/&gt;featurePoints[TimedFloatSeq] - 特徴点検出の結果となるKeyPointを配列化したデータ&lt;br/&gt;&lt;br/&gt;出力&lt;br/&gt;modifyImage[CameraImage] - UIコンポーネントへ表示する画像&lt;br/&gt;modifyImagePath[TimedString] - 画像の保存アドレスのパス&lt;br/&gt;compLineMap[TimedShortSeq] - 変換が完了した地図のライン情報" rtcDoc:description="輪郭情報と特徴点を基にラインマップへ変換するコンポーネント"/>
        <rtcExt:VersionUpLogs></rtcExt:VersionUpLogs>
    </rtc:BasicInfo>
    <rtc:Actions>
        <rtc:OnInitialize xsi:type="rtcDoc:action_status_doc" rtc:implemented="true"/>
        <rtc:OnFinalize xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnStartup xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnShutdown xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnActivated xsi:type="rtcDoc:action_status_doc" rtc:implemented="true">
            <rtcDoc:Doc rtcDoc:postCondition="" rtcDoc:preCondition="" rtcDoc:description="初期化を行う"/>
        </rtc:OnActivated>
        <rtc:OnDeactivated xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnAborting xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnError xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnReset xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnExecute xsi:type="rtcDoc:action_status_doc" rtc:implemented="true">
            <rtcDoc:Doc rtcDoc:postCondition="" rtcDoc:preCondition="" rtcDoc:description="UIとの連携とマップ情報の変換を行う"/>
        </rtc:OnExecute>
        <rtc:OnStateUpdate xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnRateChanged xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnAction xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
        <rtc:OnModeChanged xsi:type="rtcDoc:action_status_doc" rtc:implemented="false"/>
    </rtc:Actions>
    <rtc:ConfigurationSet>
        <rtc:Configuration xsi:type="rtcExt:configuration_ext" rtcExt:variableName="modi_type" rtc:unit="" rtc:defaultValue="erase" rtc:type="string" rtc:name="modifyType">
            <rtc:Constraint>
                <rtc:ConstraintUnitType>
                    <rtc:Or>
                        <rtc:Constraint>
                            <rtc:ConstraintUnitType>
                                <rtc:propertyIsEqualTo rtc:matchCase="false">
                                    <rtc:Literal>erase</rtc:Literal>
                                </rtc:propertyIsEqualTo>
                            </rtc:ConstraintUnitType>
                        </rtc:Constraint>
                        <rtc:Constraint>
                            <rtc:ConstraintUnitType>
                                <rtc:propertyIsEqualTo rtc:matchCase="false">
                                    <rtc:Literal>add</rtc:Literal>
                                </rtc:propertyIsEqualTo>
                            </rtc:ConstraintUnitType>
                        </rtc:Constraint>
                    </rtc:Or>
                </rtc:ConstraintUnitType>
            </rtc:Constraint>
            <rtcDoc:Doc rtcDoc:constraint="erase - クリックされた一番近い凸図形頂点を、輪郭データ群から消す&lt;br/&gt;add - クリック操作によって隣り合う凸図形頂点を選択してもらい、その二つの頂点の間に新たに頂点を追加する&lt;br/&gt;追加する頂点は特徴点の中から選択する" rtcDoc:range="" rtcDoc:unit="" rtcDoc:description="輪郭データ群に対するユーザからの操作の種類を選択する" rtcDoc:defaultValue="erase" rtcDoc:dataname="string"/>
            <rtcExt:Properties rtcExt:value="radio" rtcExt:name="__widget__"/>
        </rtc:Configuration>
    </rtc:ConfigurationSet>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="temp_path" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedString" rtc:name="tempFolderPath" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="大きい画像データの受け渡しや、ファイルの保存などに用いる作業領域を指定するアドレスとして用いる" rtcDoc:number="1" rtcDoc:type="TimedString" rtcDoc:description="一時作業領域のパスを受け取るためのポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="src_img" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::CameraImage" rtc:name="srcImage" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="この画像に対し修復処理が行われる&lt;br/&gt;また、UI上に表示される画像もこの画像データを用いる" rtcDoc:number="1" rtcDoc:type="CameraImage" rtcDoc:description="修復処理を行う画像データを受け取るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="cont_convex" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedShortSeq" rtc:name="contoursConvex" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="この凸図形輪郭線がラインマップのベースとなる&lt;br/&gt;Point p1,p2,p3,p4からなるVector&lt;Point&gt; convex1に対し&lt;br/&gt;- convex1.size() [0]&lt;br/&gt;- convex1.p1.x [1]&lt;br/&gt;- convex1.p1.y [2]&lt;br/&gt;- convex1.p2.x [3]&lt;br/&gt;- convex1.p2.y [4]&lt;br/&gt;- convex1.p3.x [5]&lt;br/&gt;- convex1.p3.y [6]&lt;br/&gt;- convex1.p4.x [7]&lt;br/&gt;- convex1.p4.y [8]&lt;br/&gt;これら9つの要素が配列に格納されている&lt;br/&gt;すなわち[0]~[8]で一つの図形となる&lt;br/&gt;[0]にあたるデータ数分のPointが来ると認識しそのPoint数分格納したら次のvector処理へ進む" rtcDoc:number="全図形数*(1+図形の持つ凸数*2)" rtcDoc:type="TimedShortSeq" rtcDoc:description="配列化されたconvexとして用いるvector&lt;Point&gt;のデータを受信するためのポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="feature_points" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedFloatSeq" rtc:name="featurePoints" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="この特徴点群を用いてラインマップを修正する&lt;br/&gt;KeyPoint型のデータを、各要素ごとに分解して配列化されているため&lt;br/&gt;KeyPoint&lt;br/&gt;- float angle [0]&lt;br/&gt;- int class_id [1]&lt;br/&gt;- int octave [2]&lt;br/&gt;- Point pt (pt.x [3] pt.y [4])&lt;br/&gt;- float response [5]&lt;br/&gt;- float size [6]&lt;br/&gt;KeyPointの7個データをそれぞれ配列の一要素として用いる" rtcDoc:number="特徴点の数*7" rtcDoc:type="TimedFloatSeq" rtcDoc:description="特徴検出の出力結果であるキーポイントを配列化したものを受け取るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="click_point" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedPoint3D" rtc:name="clickPoint" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="Point3Dには&lt;br/&gt;point.x - UI上のx座標&lt;br/&gt;point.y - UI上のy座標&lt;br/&gt;point.z - 操作に対するフラグ情報" rtcDoc:number="1" rtcDoc:type="TimedPoint3D" rtcDoc:description="UIでクリックされた座標を受け取るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="LEFT" rtcExt:variableName="drag_rect" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedShortSeq" rtc:name="draggedRect" rtc:portType="DataInPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="ドラッグで描かれた長方形の左上のx座標, 左上のy座標, 横幅,縦幅を持つshortの配列" rtcDoc:number="4" rtcDoc:type="TimedShortSeq" rtcDoc:description="UIでドラッグされた長方形を受け取るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="modi_img" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::CameraImage" rtc:name="modifyImage" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="抽出領域を書き込んだ画像や修復処理後の画像" rtcDoc:number="1" rtcDoc:type="CameraImage" rtcDoc:description="ユーザの修正処理のためにUI上で表示する画像を送るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="modi_img_path" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedString" rtc:name="modifyImagePath" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="抽出領域が書き込まれた画像や修復処理後の画像のパス" rtcDoc:number="1" rtcDoc:type="TimedString" rtcDoc:description=" ユーザの修正処理のためにUI上で表示する画像のパスを送るポート"/>
    </rtc:DataPorts>
    <rtc:DataPorts xsi:type="rtcExt:dataport_ext" rtcExt:position="RIGHT" rtcExt:variableName="map_line" rtc:unit="" rtc:subscriptionType="" rtc:dataflowType="" rtc:interfaceType="" rtc:idlFile="" rtc:type="RTC::TimedShortSeq" rtc:name="compLineMap" rtc:portType="DataOutPort">
        <rtcDoc:Doc rtcDoc:operation="" rtcDoc:occerrence="" rtcDoc:unit="" rtcDoc:semantics="ラインマップの情報はvector&lt;vector&lt;Point&gt;&gt;型で出来上がるため、この情報をTimedShortSeq型へ変換した情報を送る&lt;br/&gt;Point p1,p2,p3,p4からなるVector&lt;Point&gt;　convex1に対し&lt;br/&gt; - convex1.size() [0]&lt;br/&gt; - convex1.p1.x [1]&lt;br/&gt; - convex1.p1.y [2]&lt;br/&gt; - convex1.p2.x [3]&lt;br/&gt; - convex1.p2.y [4]&lt;br/&gt; - convex1.p3.x [5]&lt;br/&gt; - convex1.p3.y [6]&lt;br/&gt; - convex1.p4.x [7]&lt;br/&gt; - convex1.p4.y [8]&lt;br/&gt;これら9つの要素を配列に格納して送る&lt;br/&gt;すなわち[0]~[8]で一つの図形となる&lt;br/&gt;受け取り側は、[0]にあたるデータ数分のPointが来ると認識し、そのPoint数分格納したら次のvector処理へ進む" rtcDoc:number="全図形数*(1+図形の持つ凸数*2)" rtcDoc:type="TimedShortSeq" rtcDoc:description="処理の結果完成したラインマップの情報を送るためのポート"/>
    </rtc:DataPorts>
    <rtc:Language xsi:type="rtcExt:language_ext" rtc:kind="C++"/>
</rtc:RtcProfile>
