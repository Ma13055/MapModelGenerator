======================================================================
  RTComponent: convToLineMap specificatioin

  OpenRTM-aist-1.0.0
  Date: $Date$

  @author 立川将(Tatekawa Masaru)
   Email:y09148@shibaura-it.ac.jp

  This file is generated by rtc-template with the following argments.

#   rtc-template -bcxx --module-name=convToLineMap 
#   --module-desc='輪郭情報と特徴点を基にラインマップへ変換する' --module-version=2.1.0 --module-vendor=Masaru Tatekawa(SIT) 
#   --module-category=Conversion --module-comp-type=UNIQUE 
#   --module-act-type=PERIODIC --module-max-inst=1 
#   --config=02_modifyType:string:erase --config=01_threshold:double:3 
#   --inport=tempFolderPath:RTC::TimedString --inport=srcImage:RTC::CameraImage --inport=contoursData:RTC::TimedShortSeq --inport=featurePoints:RTC::TimedFloatSeq --inport=clickPoint:RTC::TimedPoint3D --inport=draggedRect:RTC::TimedShortSeq --outport=modifyImage:RTC::CameraImage --outport=modifyImagePath:RTC::TimedString --outport=compLineMap:RTC::TimedShortSeq 


======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: convToLineMap
Description: 輪郭情報と特徴点を基にラインマップへ変換する
Version:     2.1.0
Vendor:      Masaru Tatekawa(SIT)
Category:    Conversion
Kind:        DataFlowComponent
Comp. Type:  UNIQUE
Act. Type:   PERIODIC
MAX Inst.:   1
Lang:        C++
Lang Type:   

Overview:    輪郭情報と特徴点を基にラインマップへ変換するコンポーネ
             ント
In/Out:      入力
             tempFolderPath[TimedString] -
             画像情報送信に用いる一時保存領域のパス
             srcImage[CameraImage] - 修復処理を行いたい画像データ
             contoursData[TimedShortSeq] -
             輪郭検出の結果となるContoursを配列化したデータ
             clickPoint[TimedPoint3D] -
             UIコンポーネントとクリック情報
             draggedRect[TimedShortSeq] -
             ドラッグされて生成された長方形情報
             featurePoints[TimedFloatSeq] -
             特徴点検出の結果となるKeyPointを配列化したデータ
             出力
             modifyImage[CameraImage] -
             UIコンポーネントへ表示する画像
             modifyImagePath[TimedString] -
             画像の保存アドレスのパス
             compLineMap[TimedShortSeq] -
             変換が完了した地図のライン情報
Algorithm:   輪郭点データ群と特徴点データ群とを合わせることで凸図形
             を作成し、UI上で修正を行うことでラインマップに変換する
             。
             ここでのラインマップは「地図の頂点を示す座標群と、その
             座標同士の関係性」を持つ点と線の情報群を指す
# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]    implemented

[on_finalize]

[on_startup]

[on_shutdown]

[on_activated]     implemented
	Description:   初期化を行う

[on_deactivated]

[on_execute]       implemented
	Description:   UIとの連携とマップ情報の変換を行う

[on_aborting]

[on_error]

[on_reset]

[on_state_update]

[on_rate_changed]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">

	Name:        tempFolderPath
	PortNumber:  0
	Description: 一時作業領域のパスを受け取るためのポート
	PortType: 
	DataType:    RTC::TimedString
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedString
		Number:          1
		Semantics:       大きい画像データの受け渡しや、ファイルの保存な
		                 どに用いる作業領域を指定するアドレスとして用い
		                 る
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        srcImage
	PortNumber:  1
	Description: 修復処理を行う画像データを受け取るポート
	PortType: 
	DataType:    RTC::CameraImage
	MaxOut: 
	[Data Elements]
		Name:
		Type:            CameraImage
		Number:          1
		Semantics:       この画像に対し修復処理が行われる
		                 また、UI上に表示される画像もこの画像データを用
		                 いる
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        contoursData
	PortNumber:  2
	Description: 配列化されたcontoursとして用いるvector<vector<Point>
	             >のデータを受信するためのポート
	PortType: 
	DataType:    RTC::TimedShortSeq
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShortSeq
		Number:          検出輪郭群数*(1+輪郭点数*2)
		Semantics:       この輪郭群がラインマップのベースとなる
		                 Point p1,p2,p3,p4からなるVector<Point>
		                 convex1に対し
		                 - convex1.size() [0]
		                 - convex1.p1.x [1]
		                 - convex1.p1.y [2]
		                 - convex1.p2.x [3]
		                 - convex1.p2.y [4]
		                 - convex1.p3.x [5]
		                 - convex1.p3.y [6]
		                 - convex1.p4.x [7]
		                 - convex1.p4.y [8]
		                 これら9つの要素が配列に格納されている
		                 すなわち[0]~[8]で一つの図形となる
		                 [0]にあたるデータ数分のPointが来ると認識しその
		                 Point数分格納したら次のvector処理へ進む
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        featurePoints
	PortNumber:  3
	Description: 特徴検出の出力結果であるキーポイントを配列化したもの
	             を受け取るポート
	PortType: 
	DataType:    RTC::TimedFloatSeq
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedFloatSeq
		Number:          特徴点の数*7
		Semantics:       この特徴点群を用いてラインマップを修正する
		                 KeyPoint型のデータを、各要素ごとに分解して配列
		                 化されているため
		                 KeyPoint
		                 - float angle [0]
		                 - int class_id [1]
		                 - int octave [2]
		                 - Point pt (pt.x [3] pt.y [4])
		                 - float response [5]
		                 - float size [6]
		                 KeyPointの7個データをそれぞれ配列の一要素とし
		                 て用いる
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        clickPoint
	PortNumber:  4
	Description: UIでクリックされた座標を受け取るポート
	PortType: 
	DataType:    RTC::TimedPoint3D
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedPoint3D
		Number:          1
		Semantics:       Point3Dには
		                 point.x - UI上のx座標
		                 point.y - UI上のy座標
		                 point.z - 操作に対するフラグ情報
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        draggedRect
	PortNumber:  5
	Description: UIでドラッグされた長方形を受け取るポート
	PortType: 
	DataType:    RTC::TimedShortSeq
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShortSeq
		Number:          4
		Semantics:       ドラッグで描かれた長方形の左上のx座標,
		                 左上のy座標, 横幅,縦幅を持つshortの配列
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">

	Name:        modifyImage
	PortNumber:  0
	Description: ユーザの修正処理のためにUI上で表示する画像を送るポー
	             ト
	PortType: 
	DataType:    RTC::CameraImage
	MaxOut: 
	[Data Elements]
		Name:
		Type:            CameraImage
		Number:          1
		Semantics:       抽出領域を書き込んだ画像や修復処理後の画像
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        modifyImagePath
	PortNumber:  1
	Description: ユーザの修正処理のためにUI上で表示する画像のパスを送
	             るポート
	PortType: 
	DataType:    RTC::TimedString
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedString
		Number:          1
		Semantics:       抽出領域が書き込まれた画像や修復処理後の画像の
		                 パス
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        compLineMap
	PortNumber:  2
	Description: 処理の結果完成したラインマップの情報を送るためのポー
	             ト
	PortType: 
	DataType:    RTC::TimedShortSeq
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShortSeq
		Number:          全図形数*(1+図形の持つ凸数*2)
		Semantics:       ラインマップの情報はvector<vector<Point>>型で
		                 出来上がるため、この情報をTimedShortSeq型へ変
		                 換した情報を送る
		                 Point
		                 p1,p2,p3,p4からなるVector<Point>　convex1に対
		                 し
		                 - convex1.size() [0]
		                 - convex1.p1.x [1]
		                 - convex1.p1.y [2]
		                 - convex1.p2.x [3]
		                 - convex1.p2.y [4]
		                 - convex1.p3.x [5]
		                 - convex1.p3.y [6]
		                 - convex1.p4.x [7]
		                 - convex1.p4.y [8]
		                 これら9つの要素を配列に格納して送る
		                 すなわち[0]~[8]で一つの図形となる
		                 受け取り側は、[0]にあたるデータ数分のPointが来
		                 ると認識し、そのPoint数分格納したら次のvector
		                 処理へ進む
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
	Configuration:
		Name:            string 02_modifyType
		Description:     輪郭データ群に対するユーザからの操作の種類を選
		                 択する
		Type:            string
		DefaultValue:    erase erase
		Unit:            
		Range:           
		Constraint:      erase -
		                 クリックされた一番近い凸図形頂点を、輪郭データ
		                 群から消す
		                 add -
		                 クリック操作によって隣り合う凸図形頂点を選択し
		                 てもらい、その二つの頂点の間に新たに頂点を追加
		                 する
		                 追加する頂点は特徴点の中から選択する

		Name:            double 01_threshold
		Description:     ラインマップの下地を作成する際の、特徴点を頂点
		                 座標として用いるかどうかを調べるための閾値
		Type:            double
		DefaultValue:    3 3
		Unit:            
		Range:           x>=0
		Constraint:      

# </rtc-template> 

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

This area is reserved for future OpenRTM.

