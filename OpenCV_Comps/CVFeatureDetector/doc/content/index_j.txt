CVFeatureDetector - 日本語
=======================


はじめに
========

クラスについては、 `APIドキュメンテーション`_ に参照してください。

.. _`APIドキュメンテーション`:
   doxygen/html/index.html

条件
====

CVFeatureDetectorはOpenRTM-aist 1.0.0以上のC++版が必要です。

CVFeatureDetectorは CMake_ を使います。CMake 2.8以上が必要です。

.. _CMAke:
   http://www.cmake.org

インストール
============

インストーラ
------------

Windowsのユーザはインストーラパッケージを使用してコンポーネントをインストール
することができます。これはコンポーネント及びそのすべての必要なライブラリを
インストールします。Windowsでインストールする場合、インストーラの使用を推奨してます。

- インストーラをダウンロードしてください。
- インストールを始めるためにインストーラをダブルクリックしてください。
- 指示にしたがってコンポーネントをインストールしてください。
- 環境変数の変更を適用するため、コンポーネントを使用する前にコンピューターを
  再起動する必要があるかもしれません。

CVFeatureDetectorは ``CVFeatureDetectorComp`` の実行をダブルクリックして実行することが
できます。あるいは、 ``CVFeatureDetector`` を初期化関数の ``CVFeatureDetectorInit`` を利用して、
マネージャにロードすることができます。

ソースから
----------

ソースを使う場合は以下の手順でインストールしてください。

- ソースをダウンロードして解凍してください::

    tar -xvzf CVFeatureDetector-1.0.0.tar.gz

- 解凍されたフォルダに入ってください::

    cd CVFeatureDetector-1.0.0

- ``build`` フォルダを作ってください::

    mkdir build

- `` build`` フォルダに入ってください::

    cd build

- CMakeを実行してください::

    cmake ../

- エラーが出無い場合、makeを実行してください::

    make

- ``make install`` でコンポーネントをインストールしてください。選択された
  インストール場所に書き込み権限があるかを確認してください::

  ``make install``

- インストールする場所はccmakeを実行して ``CMAKE_INSTALL_PREFIX`` を
  設定することで変更が可能です。

    ccmake ../

ここまでで、コンポーネントが使えるようになりました。コンフィグレーションは次のセクションを
参照してください。

CVFeatureDetectorは ``CVFeatureDetectorComp`` を実行（ ``${prefix}/components/bin`` に
インストールされます）することでスタンドアローンモードで実行することができます。
あるいは、 ``libCVFeatureDetector.so`` を初期化関数の ``CVFeatureDetectorInit`` を利用して、
マネージャにロードすることができます。このライブラリは ``${prefix}/components/lib`` 
または ``${prefix}/components/lib64`` にインストールされます。


コンフィグレーション
====================

使えるコンフィグレーションパラメータは以下のテーブルを参照
してください。

================ ================== ================ ====
パラメータ       データ型           デフォルト値     意味
================ ================== ================ ====
01_ImageView     string             OFF              画像表示の選択
02_Method        string             Good             特徴検出のメソッドを選択するための変数
03_Adapter       string             NON              特徴検出のアダプタを選択するための変数
04_FAST-threshold int                1                FAS()のパラメータ
05_Good-maxCorners int                1000             GoodFeatureToTrack()のパラメータ
06_Good-qualityLevel double             0.01             GoodFeatureToTrack()のパラメータ
07_Good-minDistance double             1                GoodFeatureToTrack()のパラメータ
08_Good-blockSize int                3                GoodFeatureToTrack()のパラメータ
09_Good-k        double             0,04             GoodFeatureToTrack()のパラメータ
10_Star-maxSize  int                16               StarDetector()のパラメータ
11_Star-responseThreshold int                30               StarDetector()のパラメータ
12_Star-lineThresholdProjected int                10               StarDetector()のパラメータ
13_Star-lineThresholdBinarized int                8                StarDetector()のパラメータ
14_Star-suppressNonmaxSize int                5                StarDetector()のパラメータ
15_SIFT-threshold double             0.05             SIFT()のパラメータ
16_SIFT-edgeThreshold double             10.0             SIFT()のパラメータ
17_SURF-hessianThreshold double             400.0            SURF()のパラメータ
18_Grid-maxTotalKeypoints int                200              画像から検出されるキーポイントの最大数<br/>強いキーポイントのみが保存される
19_Grid-gridRows int                10               グリッドの行数
20_Grid-gridCols int                10               グリッドの列数
21_Pyramid-levels int                3                スケーリングレベル
22_Dynamic_minFeatures int                400              出力キーポイント個数の最少数
23_Dynamic_maxFeatures int                500              出力キーポイント個数の最大数
24_Dynamic_maxIters int                10               条件通り見つかるまでの特徴検出最大繰り返し回数
================ ================== ================ ====

ポート
======

コンポーネントによって提供されるポートは以下のテーブルで述べられています。

=============== =========== ============================== ====
ポート名        ポート型    データ型                       意味
=============== =========== ============================== ====
srcImage        InPort      RTC::CameraImage               特徴点検出を行う画像を受け取るポート
featurePoints   OutPort     RTC::TimedFloatSeq             特徴検出の出力結果であるキーポイントを配列化したもの
=============== =========== ============================== ====

例
==

例のrtc.confファイルは ``${prefix}/components/share/CVFeatureDetector/examples/conf/``
フォルダにインストールされています。

Changelog
=========


License
=======

このソフトウェアは産業技術総合研究所で開発されています。承認番号はH23PRO-????
です。このソフトウェアは Lesser General Public License (LGPL) ライセンスとして
公開されてます。COPYING.LESSER を参照してください。

