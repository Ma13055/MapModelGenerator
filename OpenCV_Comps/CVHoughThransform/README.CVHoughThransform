======================================================================
  RTComponent: CVHoughThransform specificatioin

  OpenRTM-aist-1.0.0
  Date: $Date$

  @author 立川将(Tatekawa Masaru)
   Email:y09148@shibaura-it.ac.jp

  This file is generated by rtc-template with the following argments.

#   rtc-template -bcxx --module-name=CVHoughThransform 
#   --module-desc='与えられた二値画像に対してハフ変換を行う' --module-version=1.1.0 --module-vendor=Masaru Tatekawa(SIT) 
#   --module-category=Image Processing --module-comp-type=UNIQUE 
#   --module-act-type=PERIODIC --module-max-inst=1 
#   --config=01_ImageView:string:OFF --config=02_HoughMethod:string:STANDARD --config=03_rho:double:1 --config=04_theta:double:0.0174533 --config=05_threshold:int:100 --config=06_srn:double:0 --config=07_stn:double:0 --config=08_minLineLength:double:30 --config=09_maxLineGap:double:10 
#   --inport=srcImage:RTC::CameraImage --inport=thresholdImage:RTC::CameraImage --outport=houghLines:RTC::TimedShortSeq 


======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: CVHoughThransform
Description: 与えられた二値画像に対してハフ変換を行う
Version:     1.1.0
Vendor:      Masaru Tatekawa(SIT)
Category:    Image Processing
Kind:        DataFlowComponent
Comp. Type:  UNIQUE
Act. Type:   PERIODIC
MAX Inst.:   1
Lang:        C++
Lang Type:   

Overview:    入力された二値画像に対して、コンフィギュレーションパラ
             メータで与えられた値を用いてハフ変換を行う
In/Out:      入力
             srcImage[CameraImage] - 結果出力を行いたい画像データ
             threshold[CameraImage] - ハフ変換の対象二値画像
             出力
             houghLine[TimedShortSeq] -
             ハフ変換の結果となるLinesを配列化したもの
Algorithm:   二値画像に対してハフ変換を行い、結果を入力された結果出
             力用画像に書き込み表示を行う
             入力やコンフィギュの値を常に確認し、どこか一つでも変更
             があるとエッジ再検出を行う
             出力ポートに送信されるタイミングは、検出後一度きり
# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]    implemented

[on_finalize]

[on_startup]

[on_shutdown]

[on_activated]     implemented
	Description:   初期化を行う

[on_deactivated]   implemented
	Description:   表示ウィンドウを閉じる

[on_execute]       implemented
	Description:   ハフ変換を行う

[on_aborting]

[on_error]

[on_reset]         implemented
	Description:   表示ウィンドウを閉じる

[on_state_update]

[on_rate_changed]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">

	Name:        srcImage
	PortNumber:  0
	Description: 二値画像の元画像を受け取るポート
	PortType: 
	DataType:    RTC::CameraImage
	MaxOut: 
	[Data Elements]
		Name:
		Type:            CameraImage
		Number:          1
		Semantics:       結果出力を行いたい画像データ
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        thresholdImage
	PortNumber:  1
	Description: ハフ変換を行う二値画像を受け取るポート
	PortType: 
	DataType:    RTC::CameraImage
	MaxOut: 
	[Data Elements]
		Name:
		Type:            CameraImage
		Number:          1
		Semantics:       ハフ変換を行いたい二値画像データ
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">

	Name:        houghLines
	PortNumber:  0
	Description: ハフ変換によって得たlinesのデータを送るためのポート
	PortType: 
	DataType:    RTC::TimedShortSeq
	MaxOut: 
	[Data Elements]
		Name:
		Type:            TimedShortSeq
		Number:          検出line数*4
		Semantics:       lineとして用いるPoint
		                 p1,p2をデータ配列化して送信する
		                 Point p1,p2からなるline l1に対し
		                 - l1.p1.x　[0]
		                 - l1.p1.y　[1]
		                 - l1.p2.x　[2]
		                 - l1.p2.y　[3]
		                 これら４つの要素を配列に格納して送る
		                 すなわち[0]~[3]で一本の線となる
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
	Configuration:
		Name:            string 01_ImageView
		Description:     画像表示の選択
		Type:            string
		DefaultValue:    OFF OFF
		Unit:            
		Range:           
		Constraint:      

		Name:            string 02_HoughMethod
		Description:     ハフ変換のmethodを選択するためのradioボタン
		Type:            string
		DefaultValue:    STANDARD STANDARD
		Unit:            
		Range:           
		Constraint:      STANDARD - 標準的ハフ変換
		                 MULTI_SCALE -
		                 マルチスケール型の古典的ハフ変換
		                 PROBABILISTIC - 確率的ハフ変換

		Name:            double 03_rho
		Description:     ピクセル単位で表される投票空間の距離分解能
		Type:            double
		DefaultValue:    1 1
		Unit:            
		Range:           x > 0
		Constraint:      

		Name:            double 04_theta
		Description:     ラジアン単位で表される投票空間の角度分解能
		Type:            double
		DefaultValue:    0.0174533(CV_PI/180) 0.0174533
		Unit:            
		Range:           x > 0
		Constraint:      

		Name:            int 05_threshold
		Description:     投票の閾値パラメータ
		                 十分な票( >threshold
		                 )を得た直線のみ出力されます
		Type:            int
		DefaultValue:    100 100
		Unit:            
		Range:           x > 0
		Constraint:      

		Name:            double 06_srn
		Description:     マルチスケールハフ変換において、距離分解能rho
		                 の除数となる値
		                 投票空間の粗い距離分解能はrhoとなり、細かい分
		                 解能はrho/srnとなります
		                 もしsrn = 0 かつ stn =
		                 0の場合は、古典的ハフ変換が利用されます
		                 そうでない場合は、両方のパラメータが正値である
		                 必要があります
		Type:            double
		DefaultValue:    0 0
		Unit:            
		Range:           x >= 0
		Constraint:      

		Name:            double 07_stn
		Description:     マルチスケールハフ変換において、角度分解能the
		                 taの除数となる値
		Type:            double
		DefaultValue:    0 0
		Unit:            
		Range:           x >= 0
		Constraint:      

		Name:            double 08_minLineLength
		Description:     最小の線分長
		                 これより短い線分は破棄されます
		Type:            double
		DefaultValue:    30 30
		Unit:            
		Range:           x > 0
		Constraint:      

		Name:            double 09_maxLineGap
		Description:     2点が同一線分上にあると見なす場合に許容される
		                 最大距離
		Type:            double
		DefaultValue:    10 10
		Unit:            
		Range:           x>0
		Constraint:      

# </rtc-template> 

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

This area is reserved for future OpenRTM.

